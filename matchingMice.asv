function [ReorderedinputMice, IndexIninputMice, keepIdx] = matchingMice(referenceMice, inputMice)
    % Function to reorder inputMice based on referenceMice,
    % while reporting missing entries and returning valid indices (keepIdx).


    % Trim whitespace and convert to lowercase for matching
    cleanRef = lower(strtrim(referenceMice));
    cleanInput = lower(strtrim(inputMice));
    
    % Find missing mice and their indices
    missingIndices = [];
    missingMice = [];
    for i = 1:length(referenceMice)
        if ~ismember(referenceMice(i), inputMice)
            missingIndices = [missingIndices; i];
            missingMice = [missingMice; referenceMice(i)];
        end
    end

    % Report missing mice
    if ~isempty(missingMice)
        disp("Mice not found in inputMice:");
        disp(table(missingIndices, missingMice));
    end

    % Compute keepIdx: indices to retain (excluding missing indices)
    keepIdx = setdiff(1:length(referenceMice), missingIndices);

    % Remove missing mice from referenceMice
    referenceMice(missingIndices) = [];

    % Initialize reordered inputMice and index list
    ReorderedinputMice = strings(size(referenceMice));
    IndexIninputMice = nan(size(referenceMice)); % Initialize indices with NaN

    % Match inputMice to referenceMice order
    for i = 1:length(referenceMice)
        idx = find(inputMice == referenceMice(i), 1); % Find index in inputMice
        if ~isempty(idx)
            ReorderedinputMice(i) = inputMice(idx);
            IndexIninputMice(i) = idx; % Store index of the match
        end
    end

    % Create final table
    reorderedTable = table(referenceMice, ReorderedinputMice, IndexIninputMice);
    
    % Display the result
    disp("Final reordered inputMice list:");
    disp(reorderedTable);
end
